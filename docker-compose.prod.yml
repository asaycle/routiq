version: '3.9'

services:
  postgres:
    build:
      context: .
      dockerfile: docker/pgdb/Dockerfile
    image: ghcr.io/asaycle/routiq-pgdb:latest
    container_name: pgdb
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    image: ghcr.io/asaycle/routiq-backend:latest
    container_name: backend
    environment:
      - ENV=production
    depends_on:
      - postgres

  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    image: ghcr.io/asaycle/routiq-frontend:latest
    container_name: frontend
    ports:
      - "80:80"

  envoy:
    image: envoyproxy/envoy:v1.31.0
    volumes:
      - ./docker/envoy/envoy.yaml:/etc/envoy/envoy.yaml
      - /etc/letsencrypt/live/routiq.jp:/etc/envoy/certs/live:ro
      - /etc/letsencrypt/archive/routiq.jp:/etc/envoy/certs/archive:ro
    ports:
      - "80:${ENVOY_PORT}"
      - "9901:9901"
    command: envoy -c /etc/envoy/envoy.yaml --log-level debug
    depends_on:
      - backend
      - frontend
