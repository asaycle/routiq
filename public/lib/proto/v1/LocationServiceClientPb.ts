/**
 * @fileoverview gRPC-Web generated client stub for asaycle.routiq.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.19.1
// source: v1/location.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as v1_location_pb from '../v1/location_pb'; // proto import: "v1/location.proto"


export class LocationServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorListPrefs = new grpcWeb.MethodDescriptor(
    '/asaycle.routiq.v1.LocationService/ListPrefs',
    grpcWeb.MethodType.UNARY,
    v1_location_pb.ListPrefsRequest,
    v1_location_pb.ListPrefsResponse,
    (request: v1_location_pb.ListPrefsRequest) => {
      return request.serializeBinary();
    },
    v1_location_pb.ListPrefsResponse.deserializeBinary
  );

  listPrefs(
    request: v1_location_pb.ListPrefsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<v1_location_pb.ListPrefsResponse>;

  listPrefs(
    request: v1_location_pb.ListPrefsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_location_pb.ListPrefsResponse) => void): grpcWeb.ClientReadableStream<v1_location_pb.ListPrefsResponse>;

  listPrefs(
    request: v1_location_pb.ListPrefsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_location_pb.ListPrefsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/asaycle.routiq.v1.LocationService/ListPrefs',
        request,
        metadata || {},
        this.methodDescriptorListPrefs,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/asaycle.routiq.v1.LocationService/ListPrefs',
    request,
    metadata || {},
    this.methodDescriptorListPrefs);
  }

  methodDescriptorGetPref = new grpcWeb.MethodDescriptor(
    '/asaycle.routiq.v1.LocationService/GetPref',
    grpcWeb.MethodType.UNARY,
    v1_location_pb.GetPrefRequest,
    v1_location_pb.Pref,
    (request: v1_location_pb.GetPrefRequest) => {
      return request.serializeBinary();
    },
    v1_location_pb.Pref.deserializeBinary
  );

  getPref(
    request: v1_location_pb.GetPrefRequest,
    metadata?: grpcWeb.Metadata | null): Promise<v1_location_pb.Pref>;

  getPref(
    request: v1_location_pb.GetPrefRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_location_pb.Pref) => void): grpcWeb.ClientReadableStream<v1_location_pb.Pref>;

  getPref(
    request: v1_location_pb.GetPrefRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_location_pb.Pref) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/asaycle.routiq.v1.LocationService/GetPref',
        request,
        metadata || {},
        this.methodDescriptorGetPref,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/asaycle.routiq.v1.LocationService/GetPref',
    request,
    metadata || {},
    this.methodDescriptorGetPref);
  }

  methodDescriptorListCities = new grpcWeb.MethodDescriptor(
    '/asaycle.routiq.v1.LocationService/ListCities',
    grpcWeb.MethodType.UNARY,
    v1_location_pb.ListCitiesRequest,
    v1_location_pb.ListCitiesResponse,
    (request: v1_location_pb.ListCitiesRequest) => {
      return request.serializeBinary();
    },
    v1_location_pb.ListCitiesResponse.deserializeBinary
  );

  listCities(
    request: v1_location_pb.ListCitiesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<v1_location_pb.ListCitiesResponse>;

  listCities(
    request: v1_location_pb.ListCitiesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_location_pb.ListCitiesResponse) => void): grpcWeb.ClientReadableStream<v1_location_pb.ListCitiesResponse>;

  listCities(
    request: v1_location_pb.ListCitiesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_location_pb.ListCitiesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/asaycle.routiq.v1.LocationService/ListCities',
        request,
        metadata || {},
        this.methodDescriptorListCities,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/asaycle.routiq.v1.LocationService/ListCities',
    request,
    metadata || {},
    this.methodDescriptorListCities);
  }

  methodDescriptorGetCity = new grpcWeb.MethodDescriptor(
    '/asaycle.routiq.v1.LocationService/GetCity',
    grpcWeb.MethodType.UNARY,
    v1_location_pb.GetCityRequest,
    v1_location_pb.City,
    (request: v1_location_pb.GetCityRequest) => {
      return request.serializeBinary();
    },
    v1_location_pb.City.deserializeBinary
  );

  getCity(
    request: v1_location_pb.GetCityRequest,
    metadata?: grpcWeb.Metadata | null): Promise<v1_location_pb.City>;

  getCity(
    request: v1_location_pb.GetCityRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_location_pb.City) => void): grpcWeb.ClientReadableStream<v1_location_pb.City>;

  getCity(
    request: v1_location_pb.GetCityRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_location_pb.City) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/asaycle.routiq.v1.LocationService/GetCity',
        request,
        metadata || {},
        this.methodDescriptorGetCity,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/asaycle.routiq.v1.LocationService/GetCity',
    request,
    metadata || {},
    this.methodDescriptorGetCity);
  }

}

