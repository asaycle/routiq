/**
 * @fileoverview gRPC-Web generated client stub for asaycle.routiq.v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.19.1
// source: v1/route.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as v1_route_pb from '../v1/route_pb'; // proto import: "v1/route.proto"


export class RouteServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateRoute = new grpcWeb.MethodDescriptor(
    '/asaycle.routiq.v1.RouteService/CreateRoute',
    grpcWeb.MethodType.UNARY,
    v1_route_pb.CreateRouteRequest,
    v1_route_pb.Route,
    (request: v1_route_pb.CreateRouteRequest) => {
      return request.serializeBinary();
    },
    v1_route_pb.Route.deserializeBinary
  );

  createRoute(
    request: v1_route_pb.CreateRouteRequest,
    metadata?: grpcWeb.Metadata | null): Promise<v1_route_pb.Route>;

  createRoute(
    request: v1_route_pb.CreateRouteRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_route_pb.Route) => void): grpcWeb.ClientReadableStream<v1_route_pb.Route>;

  createRoute(
    request: v1_route_pb.CreateRouteRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_route_pb.Route) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/asaycle.routiq.v1.RouteService/CreateRoute',
        request,
        metadata || {},
        this.methodDescriptorCreateRoute,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/asaycle.routiq.v1.RouteService/CreateRoute',
    request,
    metadata || {},
    this.methodDescriptorCreateRoute);
  }

  methodDescriptorListRoutes = new grpcWeb.MethodDescriptor(
    '/asaycle.routiq.v1.RouteService/ListRoutes',
    grpcWeb.MethodType.UNARY,
    v1_route_pb.ListRoutesRequest,
    v1_route_pb.ListRoutesResponse,
    (request: v1_route_pb.ListRoutesRequest) => {
      return request.serializeBinary();
    },
    v1_route_pb.ListRoutesResponse.deserializeBinary
  );

  listRoutes(
    request: v1_route_pb.ListRoutesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<v1_route_pb.ListRoutesResponse>;

  listRoutes(
    request: v1_route_pb.ListRoutesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_route_pb.ListRoutesResponse) => void): grpcWeb.ClientReadableStream<v1_route_pb.ListRoutesResponse>;

  listRoutes(
    request: v1_route_pb.ListRoutesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_route_pb.ListRoutesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/asaycle.routiq.v1.RouteService/ListRoutes',
        request,
        metadata || {},
        this.methodDescriptorListRoutes,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/asaycle.routiq.v1.RouteService/ListRoutes',
    request,
    metadata || {},
    this.methodDescriptorListRoutes);
  }

  methodDescriptorGetRoute = new grpcWeb.MethodDescriptor(
    '/asaycle.routiq.v1.RouteService/GetRoute',
    grpcWeb.MethodType.UNARY,
    v1_route_pb.GetRouteRequest,
    v1_route_pb.Route,
    (request: v1_route_pb.GetRouteRequest) => {
      return request.serializeBinary();
    },
    v1_route_pb.Route.deserializeBinary
  );

  getRoute(
    request: v1_route_pb.GetRouteRequest,
    metadata?: grpcWeb.Metadata | null): Promise<v1_route_pb.Route>;

  getRoute(
    request: v1_route_pb.GetRouteRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: v1_route_pb.Route) => void): grpcWeb.ClientReadableStream<v1_route_pb.Route>;

  getRoute(
    request: v1_route_pb.GetRouteRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: v1_route_pb.Route) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/asaycle.routiq.v1.RouteService/GetRoute',
        request,
        metadata || {},
        this.methodDescriptorGetRoute,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/asaycle.routiq.v1.RouteService/GetRoute',
    request,
    metadata || {},
    this.methodDescriptorGetRoute);
  }

}

