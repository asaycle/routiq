name: Deploy to Staging

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Build and Deploy to Staging (Sakura VPS)
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    env:
      VPS_HOST: ${{ secrets.VPS_HOST }}
      VPS_USER: ${{ secrets.VPS_USER }}
      VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      ENVOY_PORT: ${{ secrets.ENVOY_PORT }}
      REACT_APP_API_BASE: ${{ secrets.REACT_APP_API_BASE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Write .env.production
        run: |
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "REDIRECT_URI=${{ secrets.REDIRECT_URI }}" >> .env
          echo "REACT_APP_API_BASE=${{ secrets.REACT_APP_API_BASE }}"  >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}"  >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}"  >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}"  >> .env
          echo "DATABASE_URL=postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@postgres:5432/${{ secrets.POSTGRES_DB }}?sslmode=disable"  >> .env
          echo "TEST_URL=postgres"  >> .env
      
      - name: Build Docker images
        run: |
          docker compose -f docker-compose.prod.yml build

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker images
        run: |
          docker compose -f docker-compose.prod.yml push

      - name: Remote deploy on VPS (SSH)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /home/ubuntu/routiq
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            git pull origin master
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d
