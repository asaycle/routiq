syntax = "proto3";

package asaycle.routiq.v1;

import "google/api/annotations.proto";
import "google/api/resource.proto";
import "google/protobuf/timestamp.proto";
import "google/type/date.proto";
import "v1/route.proto";
import "v1/tag.proto";

option go_package = "github.com/asaycle/routiq/api/proto/v1;routiq";

enum TouringView {
  TOURING_VIEW_UNSPECIFIED = 0;
  TOURING_VIEW_BASIC = 1;      // tags は参照名のみ
  TOURING_VIEW_WITH_TAGS = 2;  // 展開して詳細も同梱
}

// Touring リソース定義
message Touring {
  option (google.api.resource) = {
    type : "asaycle.routiq.v1.Touring"
    pattern : "routes/{route}/tourings/{touring}"
    singular : "touring"
    plural : "tourings"
  };
  string name = 1;
  string route = 2 [
    (google.api.resource_reference) = { type: "asaycle.routiq.v1.Route" }
  ];
  repeated string tags = 3; // 例: ["tags/scape","tags/winding"]
  google.type.Date date = 4;
  string display_name = 5; // ルート名
  string note = 6;
  int32 score = 7;
  string user_id = 8 [
    (google.api.resource_reference) = { type: "asaycle.routiq.v1.User" }
  ];
  google.protobuf.Timestamp create_time = 9; // 作成日時 (ISO8601形式の文字列)
  google.protobuf.Timestamp update_time = 10; // 更新日時(ISO8601形式の文字列)
}

// TouringService 定義
service TouringService {
  rpc CreateTouring(CreateTouringRequest) returns (Touring);
  rpc ListTourings(ListTouringsRequest) returns (ListTouringsResponse);
  rpc GetTouring(GetTouringRequest) returns (GetTouringResponse);
}

// CreateTouring RPC
message CreateTouringRequest {
  // 親リソース: ツーリングが所属するルート
  // 例: "routes/1234567890abcdef"
  string parent = 1 [
    (google.api.resource_reference) = {
      type: "asaycle.routiq.v1.Route"
    }
  ];
  Touring touring = 2; // 作成するツーリングの情報
}

// ListTourings RPC
message ListTouringsRequest {
  string filter = 1;
  int32 page_size = 2;   // 一度に取得するルートの数
  string page_token = 3; // 次のページを指定するトークン
  TouringView view = 4; // 取得するビューの種類
}

message ListTouringsResponse {
  repeated Touring tourings = 1;
  map<string, Tag> included_tags = 2;
  string next_page_token = 3; // 次のページのトークン
}

// GetTouring RPC
message GetTouringRequest {
  string name = 1; // 取得するルートのID
  TouringView view = 2;
}

message GetTouringResponse {
  Touring touring = 1;
  map<string, Tag> included_tags = 2; // view=WITH_TAGS時のみ
}